% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bandit_basic_bernoulli.R
\name{BasicBernoulliBandit}
\alias{BasicBernoulliBandit}
\title{Bandit: BasicBernoulliBandit}
\description{
Context-free Bernoulli or Binary multi-armed bandit.
}
\details{
Simulates \code{k} Bernoulli arms where each arm issues a reward of one with
uniform probability \code{p}, and otherwise a reward of zero.

In a bandit scenario, this can be used to simulate a hit or miss event,
such as if a user clicks on a headline, ad, or recommended product.
}
\section{Usage}{

\preformatted{
  policy <- BasicBernoulliBandit$new(p_per_arm)
}
}

\section{Arguments}{


\describe{
\item{\code{p_per_arm}}{
numeric vector; p value for each of the bandit's \code{k} arms
}
}
}

\section{Methods}{


\describe{

\item{\code{new(p_per_arm)}}{
generates and instantializes a new \code{Bandit} instance.
For arguments, see Argument section above.
}

\item{\code{get_context(t)}}{
argument:
\itemize{
\item \code{t}: integer, time step \code{t}.
}
returns a named \code{list}
containing the number of arms as \code{context$k}.
}

\item{\code{get_reward(t, context, action)}}{
arguments:
\itemize{
\item \code{t}: integer, time step \code{t}.
\item \code{context}: list, with \code{context$k} (number of arms).
\item \code{action}:  list, containing \code{action$choice} (as set by \code{policy}).
}
returns a named \code{list} containing \code{reward$reward}
}
}
}

\examples{
\donttest{

horizon            <- 100
sims               <- 100

policy             <- EpsilonGreedyPolicy$new(epsilon = 0.1)

bandit             <- BasicBernoulliBandit$new(p_per_arm = c(0.6, 0.1, 0.1))
agent              <- Agent$new(policy,bandit)

history            <- Simulator$new(agent, horizon, sims)$run()

plot(history, type = "cumulative", regret = TRUE)

}
}
\seealso{
Core contextual classes: \code{\link{Bandit}}, \code{\link{Policy}}, \code{\link{Simulator}},
\code{\link{Agent}}, \code{\link{History}}, \code{\link{Plot}}

Bandit subclass examples: \code{\link{BasicBernoulliBandit}}, \code{\link{ContextualLogitBandit}},  \code{\link{LiSamplingOfflineBandit}}

Policy subclass examples: \code{\link{EpsilonGreedyPolicy}}, \code{\link{ContextualThompsonSamplingPolicy}}
}
